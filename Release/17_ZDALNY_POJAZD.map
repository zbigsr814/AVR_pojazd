Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                              ./motor/motor.o (__do_clear_bss)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o)
                              ./LCD/lcd44780.o (itoa)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o)
                              ./LCD/lcd44780.o (ltoa)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                              ./LCD/lcd44780.o (__eerd_byte_m8)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(strrev.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o) (strrev)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o) (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

IR_toggle           0x1               ./IR/ir.o
IR_flaga            0x1               ./IR/ir.o
IR_adres            0x1               ./IR/ir.o
irCnt               0x1               ./IR/ir.o
IR_komenda          0x1               ./IR/ir.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
LOAD ./motor/motor.o
LOAD ./LCD/lcd44780.o
LOAD ./IR/ir.o
LOAD ./ADC/adc.o
LOAD ./main.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7c8
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.ruch_pojazdu
                0x00000026       0x16 ./motor/motor.o
 *(.progmem*)
                0x0000003c                . = ALIGN (0x2)
                0x0000003c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000003c        0x0 linker stubs
 *(.trampolines*)
                0x0000003c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000003c                __ctors_start = .
 *(.ctors)
                0x0000003c                __ctors_end = .
                0x0000003c                __dtors_start = .
 *(.dtors)
                0x0000003c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000003c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x0000003c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000003c        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000048       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
                0x00000048                __do_copy_data
 .init4         0x0000005e       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x0000005e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000006e        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000072        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000072                __vector_1
                0x00000072                __vector_12
                0x00000072                __bad_interrupt
                0x00000072                __vector_6
                0x00000072                __vector_3
                0x00000072                __vector_11
                0x00000072                __vector_13
                0x00000072                __vector_17
                0x00000072                __vector_7
                0x00000072                __vector_4
                0x00000072                __vector_9
                0x00000072                __vector_2
                0x00000072                __vector_15
                0x00000072                __vector_8
                0x00000072                __vector_14
                0x00000072                __vector_10
                0x00000072                __vector_16
                0x00000072                __vector_18
 .text          0x00000074        0x0 ./motor/motor.o
 .text          0x00000074        0x0 ./LCD/lcd44780.o
 .text          0x00000074        0x0 ./IR/ir.o
 .text          0x00000074        0x0 ./ADC/adc.o
 .text          0x00000074        0x0 ./main.o
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(strrev.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text          0x00000074        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
                0x00000074                . = ALIGN (0x2)
 *(.text.*)
 .text.M0_ruch.part.0
                0x00000074        0x6 ./motor/motor.o
 .text.M1_ruch.part.1
                0x0000007a        0x6 ./motor/motor.o
 .text.M2_ruch.part.2
                0x00000080        0x6 ./motor/motor.o
 .text.M3_ruch.part.3
                0x00000086        0x6 ./motor/motor.o
 .text.M0_ruch  0x0000008c       0x16 ./motor/motor.o
                0x0000008c                M0_ruch
 .text.M1_ruch  0x000000a2       0x16 ./motor/motor.o
                0x000000a2                M1_ruch
 .text.M2_ruch  0x000000b8       0x16 ./motor/motor.o
                0x000000b8                M2_ruch
 .text.M3_ruch  0x000000ce       0x16 ./motor/motor.o
                0x000000ce                M3_ruch
 .text.ruch_pojazdu
                0x000000e4       0x8e ./motor/motor.o
                0x000000e4                ruch_pojazdu
 .text.ir2motors
                0x00000172       0xaa ./motor/motor.o
                0x00000172                ir2motors
 .text.data_dir_out
                0x0000021c        0xa ./LCD/lcd44780.o
 .text.lcd_sendHalf
                0x00000226       0x2a ./LCD/lcd44780.o
 .text._lcd_write_byte
                0x00000250       0x2a ./LCD/lcd44780.o
                0x00000250                _lcd_write_byte
 .text.lcd_write_cmd
                0x0000027a        0x4 ./LCD/lcd44780.o
                0x0000027a                lcd_write_cmd
 .text.lcd_write_data
                0x0000027e        0x4 ./LCD/lcd44780.o
                0x0000027e                lcd_write_data
 .text.lcd_char
                0x00000282        0xc ./LCD/lcd44780.o
                0x00000282                lcd_char
 .text.lcd_str  0x0000028e       0x16 ./LCD/lcd44780.o
                0x0000028e                lcd_str
 .text.lcd_str_P
                0x000002a4       0x1a ./LCD/lcd44780.o
                0x000002a4                lcd_str_P
 .text.lcd_str_E
                0x000002be       0x1e ./LCD/lcd44780.o
                0x000002be                lcd_str_E
 .text.lcd_int  0x000002dc       0x34 ./LCD/lcd44780.o
                0x000002dc                lcd_int
 .text.lcd_hex  0x00000310       0x34 ./LCD/lcd44780.o
                0x00000310                lcd_hex
 .text.lcd_defchar
                0x00000344       0x30 ./LCD/lcd44780.o
                0x00000344                lcd_defchar
 .text.lcd_defchar_P
                0x00000374       0x34 ./LCD/lcd44780.o
                0x00000374                lcd_defchar_P
 .text.lcd_defchar_E
                0x000003a8       0x44 ./LCD/lcd44780.o
                0x000003a8                lcd_defchar_E
 .text.lcd_locate
                0x000003ec        0xc ./LCD/lcd44780.o
                0x000003ec                lcd_locate
 .text.lcd_cls  0x000003f8       0x12 ./LCD/lcd44780.o
                0x000003f8                lcd_cls
 .text.lcd_init
                0x0000040a       0x7c ./LCD/lcd44780.o
                0x0000040a                lcd_init
 .text.ir_init  0x00000486       0x20 ./IR/ir.o
                0x00000486                ir_init
 .text.__vector_5
                0x000004a6      0x16a ./IR/ir.o
                0x000004a6                __vector_5
 .text.AdcInit  0x00000610        0xc ./ADC/adc.o
                0x00000610                AdcInit
 .text.AdcPomiar
                0x0000061c       0x20 ./ADC/adc.o
                0x0000061c                AdcPomiar
 .text.Timer2_init
                0x0000063c       0x18 ./main.o
                0x0000063c                Timer2_init
 .text.startup.main
                0x00000654       0x32 ./main.o
                0x00000654                main
 .text.libgcc.mul
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000686        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000686       0x3e c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o)
                0x00000686                itoa
 .text.avr-libc
                0x000006c4       0x64 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o)
                0x000006c4                ltoa
 .text.avr-libc
                0x00000728       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                0x00000728                __eerd_byte_m8
 .text.avr-libc
                0x00000738       0x20 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(strrev.o)
                0x00000738                strrev
 .text.libgcc.mul
                0x00000758        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000758       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
                0x00000758                __udivmodhi4
 .text.libgcc   0x00000780        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000780        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000780        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000780        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000780        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x00000780       0x44 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
                0x00000780                __udivmodsi4
 .text.libgcc   0x000007c4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000007c4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000007c4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000007c4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
                0x000007c4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007c4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                0x000007c4                _exit
                0x000007c4                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007c4        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000007c8                _etext = .

.data           0x00800060        0x2 load address 0x000007c8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./motor/motor.o
 .data          0x00800060        0x0 ./LCD/lcd44780.o
 .data          0x00800060        0x0 ./IR/ir.o
 .data          0x00800060        0x0 ./ADC/adc.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(strrev.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
 *(.data*)
 .data.pwm      0x00800060        0x1 ./main.o
                0x00800060                pwm
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
 *fill*         0x00800061        0x1 
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062        0xb
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800062        0x0 ./motor/motor.o
 .bss           0x00800062        0x0 ./LCD/lcd44780.o
 .bss           0x00800062        0x0 ./IR/ir.o
 .bss           0x00800062        0x0 ./ADC/adc.o
 .bss           0x00800062        0x0 ./main.o
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(strrev.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .bss           0x00800062        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 .bss.ostatniaWar.1369
                0x00800062        0x2 ./IR/ir.o
 .bss.statusIr.1373
                0x00800064        0x1 ./IR/ir.o
 .bss.IrSzerCnt.1371
                0x00800065        0x1 ./IR/ir.o
 .bss.odebranaIr.1372
                0x00800066        0x2 ./IR/ir.o
 *(COMMON)
 COMMON         0x00800068        0x0 ./motor/motor.o
 COMMON         0x00800068        0x5 ./IR/ir.o
                0x00800068                IR_toggle
                0x00800069                IR_flaga
                0x0080006a                IR_adres
                0x0080006b                irCnt
                0x0080006c                IR_komenda
                0x0080006d                PROVIDE (__bss_end, .)
                0x000007c8                __data_load_start = LOADADDR (.data)
                0x000007ca                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006d        0x0
                0x0080006d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006d                PROVIDE (__noinit_end, .)
                0x0080006d                _end = .
                0x0080006d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0xc78
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc      0x1b0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x0000087c      0x294 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(ltoa.o)
                                0x2a0 (size before relaxing)
 .stab          0x00000b10       0x90 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(eerd_byte_atmega8.o)
                                 0x9c (size before relaxing)
 .stab          0x00000ba0       0xd8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000      0x270
 *(.stabstr)
 .stabstr       0x00000000      0x270 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./motor/motor.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./LCD/lcd44780.o
 .comment       0x00000000       0x30 ./IR/ir.o
 .comment       0x00000000       0x30 ./ADC/adc.o
 .comment       0x00000000       0x30 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(17_ZDALNY_POJAZD.elf elf32-avr)
LOAD linker stubs
